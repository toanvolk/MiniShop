// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniShop.EF;

namespace MiniShop.EF.Migrations
{
    [DbContext(typeof(MiniShopContext))]
    [Migration("20201101162351_add-data-area")]
    partial class adddataarea
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MiniShop.EF.Area", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Area");

                    b.HasData(
                        new
                        {
                            Id = new Guid("941de86f-0d0a-4442-b601-222a3439e599"),
                            Code = "VN",
                            Name = "VIET NAM"
                        },
                        new
                        {
                            Id = new Guid("31579ad3-012a-4384-8779-5015f4af05df"),
                            Code = "TH",
                            Name = "THAILAND"
                        },
                        new
                        {
                            Id = new Guid("899eb9b8-b083-41d1-a83f-05b1d05688c7"),
                            Code = "TW",
                            Name = "TAIWAN"
                        },
                        new
                        {
                            Id = new Guid("af1ae7eb-f563-4bd3-8d63-6e9a246e9312"),
                            Code = "SA",
                            Name = "SAUDI ARABIA"
                        },
                        new
                        {
                            Id = new Guid("5bbcaecc-6bf9-4700-9038-3411d6fbeff8"),
                            Code = "RO",
                            Name = "ROMANIA"
                        },
                        new
                        {
                            Id = new Guid("f949f1f2-2fde-48b7-a6e6-082ed04efaf1"),
                            Code = "PT",
                            Name = "PORTUGAL"
                        },
                        new
                        {
                            Id = new Guid("992f73c4-dac8-4dbf-af0e-d87e466de190"),
                            Code = "MY",
                            Name = "MALAYSIA"
                        },
                        new
                        {
                            Id = new Guid("56be5c40-6f74-4541-9ef0-504216c5c2a7"),
                            Code = "ID",
                            Name = "INDONESIA"
                        },
                        new
                        {
                            Id = new Guid("f15fcd0c-31ba-468a-9d64-193423c4c3fe"),
                            Code = "HU",
                            Name = "HUNGARY"
                        },
                        new
                        {
                            Id = new Guid("7cba80fb-ea4f-4c49-ba61-2d7685b7b399"),
                            Code = "HK",
                            Name = "HONG KONG"
                        },
                        new
                        {
                            Id = new Guid("eb3edbe3-53f2-4813-8904-6c9e33673c02"),
                            Code = "KH",
                            Name = "CAMBODIA"
                        },
                        new
                        {
                            Id = new Guid("32383e33-ba44-46d8-8d5a-bfea2e39beb6"),
                            Code = "BG",
                            Name = "BULGARIA"
                        });
                });

            modelBuilder.Entity("MiniShop.EF.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("NotUse")
                        .HasColumnType("bit");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("MiniShop.EF.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<bool>("NotUse")
                        .HasColumnType("bit");

                    b.Property<string>("Picture")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(12, 2)");

                    b.Property<string>("TrackingLink")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("MiniShop.EF.TouchHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UpdatedBy")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TouchHistory");
                });
#pragma warning restore 612, 618
        }
    }
}
