
@using MiniShop.App
@model Tuple<ICollection<PostDto>>;
@*@model Tuple<InfoServerConfig, BlogDto, ICollection<ProductDto>>;
    @{
        var metaData = new MetaTagDto()
        {
            Title = Model.Item2.Title,
            Description = Model.Item2.DescriptionShort,
            Keywords = "sinh ly, phu khoa, man duc, co be, phuc hoi, tang kha nang, lam dep, phu nu, duong vat, am ho, ...",
            FacebookMeta = new FacebookMetaTag()
            {
                Description = Model.Item2.DescriptionShort,
                Title = Model.Item2.Title,
                SiteName = Model.Item1.DomainName,
                Image = $"{Model.Item1.HostName}{Model.Item1.FileRootPath}/{Model.Item2.PicturePath}",
                Url = "hanglink.info"
            },
            TwitterMeta = new TwitterMetaTag()
            {
                Url = "hanglink.info",
                Title = Model.Item2.DescriptionShort,
                Image = $"{Model.Item1.HostName}{Model.Item1.FileRootPath}/{Model.Item2.PicturePath}",
                Card = Model.Item1.DomainName
            }
        };
    }
    @section metaTag{
        <partial name="../Shared/_metaTag.cshtml" model="metaData" />
    }*@
@section stylesheets{
    <link rel='stylesheet' href='https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css'>
    <link href="~/lib/chameleon-admin/app-assets/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/lib/chameleon-admin/app-assets/css/bootstrap-extended.min.css" rel="stylesheet" />
    @*For mshop-blog-ads-client*@
    <meta name="apple-mobile-web-app-title" content="CodePen">

    <link rel='stylesheet' href='https://fonts.googleapis.com/icon?family=Material+Icons'>
    <link rel='stylesheet' href='https://storage.googleapis.com/code.getmdl.io/1.0.1/material.teal-red.min.css'>
    <link href="~/css/client/loader-newton.min.css" rel="stylesheet" />
    <link href="~/css/client/posts.css" rel="stylesheet" />

}

<partial name="../Home/_nav.cshtml" />
<div class="row" id="mshop-tool-post">
    <div id="d-init">
        @{
            var fontStandand = Model.Item1.Where(o => o.Code == "font-chuan").FirstOrDefault();
            <div id="d-f-standand" hidden>@fontStandand.FontSign</div>

            var fonts = Model.Item1.Where(o => o.Code != "font-chuan" && o.PostType == MiniShop.EF.PostType.INPUT_TYPE).Select(o => new { FontSign = o.FontSign });
            <div id="d-f-sign" hidden>@Html.Raw(Json.Serialize(fonts))</div>

            var fontTempletes = Model.Item1.Where(o => o.Code != "font-chuan" && o.PostType == MiniShop.EF.PostType.TEMPLATE_TYPE).Select(o => new { FontSign = o.FontSign });
            <div id="d-f-sign-template" hidden>@Html.Raw(Json.Serialize(fontTempletes))</div>
        }
    </div>
    <div id="fh5co-post-history" class="col-3 mshop-tool-post template">
        <div class="container">
            <label class="font-template">Font mẫu</label>
            <ul class="font-template-items">
            </ul>
        </div>
    </div>
    <div id="fh5co-post-content" class="col-5 mshop-tool-post content">
        <div class="container">
            <div class="gooey load-convert">
                <span class="dot"></span>
                <div class="dots">
                    <span></span>
                    <span></span>
                    <span></span>
                </div>
            </div>
            <div class="row button-action">
                <button class="btn btn-primary" id="btn-copy">Sao chép</button>
                <span class="copy-status">Đã sao chép</span>
            </div>
            <div class="row content-edit">
                <textarea rows="20" class="form-control" autofocus></textarea>
            </div>
            <label>Biểu tượng: </label>
            <div class="row icon-group" style="background: #fff; overflow: auto; max-height: 30em; ">
                <partial name="Posts_emoji.cshtml" />
            </div>

        </div>
    </div>
    <div id="fh5co-post-tool" class="col-4 mshop-tool-post tool">
        <div class="container">
            <label class="font-info">Chọn font</label>
            <ul>
                <li>Lorem dolor amet sit </li>
                <li>Lorem ipsum dolor sit amet consecutor adipiscingLorem ipsum dolor sit amet </li>
                <li>Lorem ipsum dolor sit amet consecutor</li>
            </ul>
        </div>
    </div>
</div>

<environment include="Development">
    @section Scripts{
        <script>
            (function () {

                //----------------------------------DEFINE----------------------------
                var assetRoot = '';
                var assetRootArray = undefined;
                var assetFonts = [];

                (function () {
                    //init
                    assetRoot = unescape($('#d-f-standand').text());
                    assetRootArray = assetRoot.split(' ');

                    assetFonts.push(assetRoot);

                    let _fonts = JSON.parse($('#d-f-sign').text());
                    _fonts.map(o => {
                        assetFonts.push(unescape(o.fontSign));
                    });

                    let _fontTemplates = JSON.parse($('#d-f-sign-template').text());
                    _fontTemplates.map(o => {
                        let _html = '<li>' + unescape(o.fontSign)+'</li>';
                        $('ul.font-template-items').append(_html);
                    });

                    //load
                    $('.load-convert').hide();
                    //statu copy
                    $('span.copy-status').hide();
                    //
                    let liTag = '';
                    $(assetFonts).each(function (index, item) {
                        liTag += "<li></li>";
                    });
                    $('.mshop-tool-post.tool ul').html(liTag);
                })();

                var isCopy = false;
                //----------------------------------FUNCTION----------------------------
                function convertCharFont(indexFont, chars) {
                    $('.load-convert').show();
                    let charReturn = '';
                    let fonts = assetFonts[indexFont].split(' ');
                    chars.forEach(function (c) {
                        //get index in root
                        let i = assetRootArray.indexOf(c);
                        if (i == -1)
                            charReturn += c;
                        else
                            charReturn += fonts[i];
                    });
                    $('.load-convert').hide();
                    return charReturn;
                }
                function clearFont(text) {
                    $('.load-convert').show();
                    let returnText = '';
                    let cTextEscape = escape(text);
                    let spaceEscape = escape(' ');

                    while (cTextEscape != '') {
                        let oldText = cTextEscape;
                        assetFonts.forEach(function (itemFont) {
                            let chars = itemFont.split(' ');
                            chars.forEach(function (item, index) {
                                let charEscape = escape(item);
                                if (cTextEscape.startsWith(spaceEscape)) {
                                    returnText += ' ';
                                    cTextEscape = cTextEscape.replace(spaceEscape, '');
                                }

                                if (cTextEscape.startsWith(charEscape)) {
                                    returnText += assetRootArray[index];
                                    cTextEscape = cTextEscape.replace(charEscape, '');
                                    return;
                                }
                            });
                        });

                        //end loop
                        if (oldText == cTextEscape) {
                            let cTexts = cTextEscape.split(spaceEscape);
                            if (cTexts.length > 0) {
                                returnText += unescape(cTexts[0]);
                                cTextEscape = cTextEscape.replace(cTexts[0], '');
                            }
                        }
                    }

                    $('.load-convert').hide();
                    return returnText;
                }
                //----------------------------------EVENT----------------------------
                $('.mshop-tool-post.tool ul li').on('click', function (e) {
                    let startSelect = $(e.target).data('start-select');
                    let endSelect = $(e.target).data('end-select');
                    let text = $(e.target).data('vlue');

                    let textContain = $('.content-edit textarea').val();
                    let textReplace = textContain.substring(0, startSelect) + text + textContain.substring(endSelect);

                    $('.content-edit textarea').val(textReplace);

                    $('.content-edit textarea')[0].setSelectionRange(startSelect, startSelect + text.length);
                    $(".content-edit textarea")[0].focus();
                });
                $(".mshop-tool-post.content textarea").select(function (e) {
                    let textRoot = $(e.target).val();
                    let startSelect = $(e.target)[0].selectionStart;
                    let endSelect = $(e.target)[0].selectionEnd;
                    let textSelected = textRoot.substring(startSelect, endSelect);

                    if (!isCopy) {
                        //clear font
                        textSelected = clearFont(textSelected); console.log(textSelected);

                        $('.mshop-tool-post.tool ul li').each(function (index, selector) {
                            let chars = textSelected.split('');
                            let text = convertCharFont(index, chars);
                            let ctexts = text.split(' ');

                            let textDisplay = '';
                            let i = 0;
                            ctexts.forEach(function (item) {
                                if (i <= 8) {
                                    textDisplay += item + ' ';
                                }
                                i++;
                            });
                            let signHas = '';
                            if (ctexts.length > 9) signHas = '...';
                            $(selector).data('vlue', text);
                            $(selector).text(textDisplay + signHas);

                        });

                        $('.mshop-tool-post.tool ul li').data('start-select', startSelect);
                        $('.mshop-tool-post.tool ul li').data('end-select', endSelect);
                    }
                });
                $('.category p').on('click', function (e) {
                    let icon = $(e.target).text();
                    let startSelect = $(".content-edit textarea")[0].selectionStart;
                    let endSelect = $(".content-edit textarea")[0].selectionEnd;

                    let textContain = $('.content-edit textarea').val();
                    let textReplace = textContain.substring(0, startSelect) + icon + textContain.substring(endSelect);
                    $('.content-edit textarea').val(textReplace);
                    //$('.content-edit textarea')[0].setSelectionRange(startSelect, startSelect + icon.length);
                    $(".content-edit textarea")[0].selectionEnd = startSelect + icon.length;
                    $(".content-edit textarea")[0].focus();
                });
                $('#btn-copy').on('click', function () {
                    //let len = $(".mshop-tool-post.content textarea")[0].textLength;
                    //let text = $(".mshop-tool-post.content textarea").val();
                    //$(".mshop-tool-post.content textarea")[0].setSelectionRange(0, len);

                    isCopy = true;

                    $(".mshop-tool-post.content textarea").select();
                    document.execCommand("copy");
                    $('span.copy-status').show();
                    setTimeout(function () {
                        $("span.copy-status").fadeOut(1500);
                        isCopy = false;
                    }, 1500);
                });
                $('.template ul li').on('click', function (e) {
                    let text = $(e.target).text();
                    let startSelect = $(".content-edit textarea")[0].selectionStart;
                    let endSelect = $(".content-edit textarea")[0].selectionEnd;

                    let textContain = $('.content-edit textarea').val();
                    let textReplace = textContain.substring(0, startSelect) + text + textContain.substring(endSelect);
                    $('.content-edit textarea').val(textReplace);
                    //$('.content-edit textarea')[0].setSelectionRange(startSelect, startSelect + icon.length);
                    $(".content-edit textarea")[0].selectionEnd = startSelect + text.length;
                    $(".content-edit textarea")[0].focus();
                });
            })();
        </script>
    }
</environment>
<environment include="Production">
    @section Scripts{

    }
</environment>

